document.addEventListener("DOMContentLoaded", async function () {
    await fetchFlightData();  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheet
    initMap();  // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
    setupAircraftListToggle(); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå
    const toggleListBtn = document.getElementById("toggleListBtn");
    const aircraftList = document.getElementById("aircraftList");

    toggleListBtn.addEventListener("click", () => {
        if (aircraftList.style.display === "none") {
            aircraftList.style.display = "block";  // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            toggleListBtn.textContent = "‚ñ≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô";  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏∏‡πà‡∏°
        } else {
            aircraftList.style.display = "none";  // ‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            toggleListBtn.textContent = "‚ñº ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô";  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏∏‡πà‡∏°
        }
    });
});

const provinceCoordinates = {
    "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà": [18.7883, 98.9853],
    "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û": [13.7367, 100.5231],
    "‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô": [16.4322, 102.8236],
    "‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï": [7.8804, 98.3923],
    "‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ": [15.2442, 104.8473],
    "‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç": [15.8692, 104.6513],
    "‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ": [17.4138, 102.7914],
    "‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ": [14.0039, 99.5501],
    "‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå": [15.7112, 100.1153],
    "‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà": [8.0857, 98.9063],
    "‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å": [14.0859, 101.2311],
    "‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°": [13.8198, 100.0401],
    "‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤": [14.9700, 102.0951],
    "‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ": [13.9074, 100.5211],
    "‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™": [6.4281, 101.8214],
    "‡∏ô‡πà‡∏≤‡∏ô": [18.7734, 100.7754],
    "‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨": [18.4462, 103.0605],
    "‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå": [14.5381, 103.0964],
    
    "‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á": [14.119651846368596, 100.62024770985914], 
    "‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ": [14.0011, 100.5159],
    "‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå": [11.8010, 99.7961],
    "‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ": [13.9385, 101.4190],
    "‡∏û‡∏∞‡πÄ‡∏¢‡∏≤": [19.1510, 99.9175],
    "‡∏û‡∏±‡∏á‡∏á‡∏≤": [8.4225, 98.4878],
    "‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á": [7.6164, 100.0772],
    "‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å": [16.8265, 100.2642],
    "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå": [16.4537, 101.1859],
    "‡πÅ‡∏û‡∏£‡πà": [18.1513, 100.1695],
    "‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ": [7.3162, 99.9000],
    "‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°": [15.3836, 103.2956],
    "‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£": [16.5400, 104.7107],
    "‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô": [19.3033, 97.9825],
    "‡∏•‡∏≥‡∏û‡∏π‡∏ô": [18.5785, 98.5314],
    "‡∏•‡∏≥‡∏õ‡∏≤‡∏á": [18.2923, 99.5082],
    "‡πÄ‡∏•‡∏¢": [17.4865, 101.7353],
    "‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©": [15.1228, 104.3245],
    "‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£": [17.1597, 104.1454],
    "‡∏™‡∏á‡∏Ç‡∏•‡∏≤": [7.1735, 100.5960],
    "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£": [13.6043, 100.6010],
    "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£": [13.5659, 100.2833],
    "‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß": [13.8251, 102.0691],
    "‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ": [14.5313, 100.8839],
    "‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢": [17.0003, 99.8190],
    "‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ": [14.4696, 100.1135],
    "‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ": [9.1406, 99.3258],
    "‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå": [14.8666, 103.4899],
    "‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢": [17.8707, 102.7415],
    "‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π": [17.2137, 102.4067],
    "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢": [19.9124, 99.8223],
    "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ": [12.9687, 99.9573],
    "‡∏£‡∏∞‡∏ô‡∏≠‡∏á": [9.9385, 98.6293],
    "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ": [13.5427, 99.8151],
    "‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ": [14.8027, 100.6116],
    "‡∏™‡∏ï‡∏π‡∏•": [7.6014, 99.9786],
    "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°": [13.4149, 99.9803]
};

const aircraftImages = {
    "SKA-350": "https://www.royalrain.go.th/royalrain/IMG/content/archive/1_SuperKingAir350(SKA350).jpg",
    "CN-235": "https://www.royalrain.go.th/royalrain/IMG/content/archive/2_CN_235-220.jpg",
    "NC 212I": "https://www.royalrain.go.th/royalrain/IMG/content/archive/3_Casa_C212_NC212i.jpg",
    "CASA-400": "https://www.royalrain.go.th/royalrain/IMG/content/archive/3_Casa_C212_NC212i.jpg",
    "CASA-300": "https://www.royalrain.go.th/royalrain/IMG/content/archive/3_Casa_C212_NC212i.jpg",
    "CASA-200": "https://www.royalrain.go.th/royalrain/IMG/content/archive/3_Casa_C212_NC212i.jpg",
    "CARAVAN": "https://www.royalrain.go.th/royalrain/IMG/content/archive/4_Grand_Caravan_Caravan_Cessna_C%E0%B9%92%E0%B9%90%E0%B9%98B.jpg",
    "BELL 412EP": "https://www.royalrain.go.th/royalrain/IMG/content/archive/5_BELL_412EP.jpg",
    "BELL 407GXP": "https://www.royalrain.go.th/royalrain/IMG/content/archive/6_BELL_%E0%B9%94%E0%B9%90%E0%B9%97.jpg",
    "BELL 407": "https://www.royalrain.go.th/royalrain/IMG/content/archive/6_BELL_%E0%B9%94%E0%B9%90%E0%B9%97.jpg",
    "AS350B2": "https://www.royalrain.go.th/royalrain/IMG/content/archive/7_AS%20350_B2_ECUREUIL%20.jpg",
    "BELL 206B": "https://www.royalrain.go.th/royalrain/IMG/content/archive/8_BELL_%E0%B9%92%E0%B9%90%E0%B9%96B.jpg",
    "H130T2": "https://it.royalrain.go.th/aircraft_services/uploads/aircraft/60a15b7d97a3c9e82ff3b1fb89bc49e5.png"
};


// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏î :00 ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
function formatTime(timeString) {
    if (timeString && timeString.includes(":00")) {
        return timeString.slice(0, -3);
    }
    return timeString;
}

function generateAircraftList() {
    const listContainer = document.getElementById('aircraftList');
    listContainer.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤

    flightData.forEach(flight => {
        const listItem = document.createElement('li');
        listItem.classList.add("aircraft-item");

        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î emoji ‡πÅ‡∏•‡∏∞‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô
        const statusIcon = flight.status === "yes" ? "‚úî" : "‚úñ";
        const statusColor = flight.status === "yes" ? "green" : "red";

        // ‡πÉ‡∏™‡πà emoji ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô
        listItem.innerHTML = `
            <span class="status-icon ${statusColor}">${statusIcon}</span>
            ${flight.name} (${flight.aircraftNumber})
        `;

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
        listItem.addEventListener("click", () => {
            updateSidebar(flight);
            map.setView([flight.latitude, flight.longitude], 8);
        });

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå
        listContainer.appendChild(listItem);
    });
}



async function fetchFlightData() {
    const sheetID = "1_M74Pe_4uul0fkcEea8AMxQIMcPznNZ9ttCqvbeQgBs";
    const aircraftSheetGID = "0";
    const helicopterSheetGID = "1621250589";
    
    const aircraftURL = `https://docs.google.com/spreadsheets/d/${sheetID}/gviz/tq?tqx=out:json&gid=${aircraftSheetGID}`;
    const helicopterURL = `https://docs.google.com/spreadsheets/d/${sheetID}/gviz/tq?tqx=out:json&gid=${helicopterSheetGID}`;

    try {
        console.log("üì° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô...");
        const aircraftResponse = await fetch(aircraftURL);
        const aircraftText = await aircraftResponse.text();
        const aircraftJson = JSON.parse(aircraftText.substring(47, aircraftText.length - 2));
        
        console.log("üì° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå...");
        const helicopterResponse = await fetch(helicopterURL);
        const helicopterText = await helicopterResponse.text();
        const helicopterJson = JSON.parse(helicopterText.substring(47, helicopterText.length - 2));

        flightData.length = 0;

        function processSheetData(rows, type) {
            rows.forEach(row => {
                let missionBase = (type === "helicopter" ? (row.c[10]?.v || "").toString() : (row.c[9]?.v || "").toString());
                let maintenanceManager = (type === "helicopter" ? (row.c[11]?.v || "").toString() : (row.c[10]?.v || "").toString());
                let note = (type === "helicopter" ? (row.c[12]?.v || "").toString() : (row.c[11]?.v || "").toString());

                let province = extractProvince(missionBase);
                let coordinates = provinceCoordinates[province] || [13.7367, 100.5231];
                let jitteredCoordinates = addJitter(coordinates);

                let status = (row.c[3]?.v || "").toString();  // ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå D ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞

                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ" ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏õ‡πá‡∏ô "aircraft" ‡∏´‡∏£‡∏∑‡∏≠ "helicopter"
                if (status !== "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ") {
                    let remainingHours = formatTime(row.c[4]?.v || ""); // ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ö‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
                    let engineLH = (type === "helicopter" ? formatTime(row.c[5]?.v || "") : formatTime(row.c[7]?.v || ""));
                    let engineRH = (type === "helicopter" ? formatTime(row.c[6]?.v || "") : formatTime(row.c[8]?.v || ""));

                    let aCheck = type === "helicopter" ? getValidACheck(row) : formatTime(row.c[6]?.v || ""); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏∞‡∏î‡∏π‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå H, I, J

                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                    let flight = {
                        id: (row.c[2]?.v || "").toString(),
                        name: (row.c[1]?.v || "").toString(),
                        aircraftNumber: (row.c[2]?.v || "").toString(),
                        status: status,
                        remainingHours: remainingHours,
                        engineLH: engineLH,
                        engineRH: engineRH,
                        missionBase: missionBase,
                        maintenanceManager: maintenanceManager,
                        note: note,
                        aCheck: aCheck, // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏£‡∏ö‡∏ã‡πà‡∏≠‡∏° A Check
                        latitude: jitteredCoordinates[0],
                        longitude: jitteredCoordinates[1],
                        type: type  // ‡πÅ‡∏¢‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå
                    };

                    flightData.push(flight);
                }
            });
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå H, I, J (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå)
        function getValidACheck(row) {
            // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå H (7), I (8), J (9)
            for (let col = 7; col <= 9; col++) {
                let value = row.c[col]?.v;
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ value ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "-" ‡∏´‡∏£‡∏∑‡∏≠ "_"
                if (value && !isNaN(parseFloat(value)) && value !== '-' && value !== '_') {
                    // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á:‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏ä‡πà‡∏ô 100 -> "100:00"
                    return convertToTimeFormat(value);
                }
            }
            return 'N/A'; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï "xx:xx" ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
        function convertToTimeFormat(value) {
            // ‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á:‡∏ô‡∏≤‡∏ó‡∏µ
            let timeValue = value.toString();
            if (timeValue.includes(':')) {
                // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ ":", ‡∏à‡∏∞‡∏ï‡∏±‡∏î‡πÅ‡∏Ñ‡πà‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÅ‡∏•‡∏∞‡∏ô‡∏≤‡∏ó‡∏µ
                return timeValue.split(':').slice(0, 2).join(':');
            }
            return timeValue; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ":", ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°
        }

        processSheetData(aircraftJson.table.rows, "aircraft");
        processSheetData(helicopterJson.table.rows, "helicopter");

        console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß:", flightData);
        generateAircraftList();
    } catch (error) {
        console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", error);
    }
}



function formatHours(value) {
    if (!value) return "N/A";
    return value.replace(/:00$/, "");
}

function extractProvince(text) {
    for (let province in provinceCoordinates) {
        if (text.includes(province)) {
            return province;
        }
    }
    return "‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå";
}

function addJitter([lat, lng]) {
    let jitterLat = (Math.random() - 0.5) * 0.01;
    let jitterLng = (Math.random() - 0.5) * 0.01;
    return [lat + jitterLat, lng + jitterLng];
}

let map;
function initMap() {
    map = L.map('map').setView([13.7367, 100.5231], 6);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    flightData.forEach(flight => {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡πÉ‡∏ä‡πâ flight.type ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetchFlightData)
        const isHelicopter = flight.type === "helicopter"; // ‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô flight.type

        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ drop-shadow ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        const shadowColor = flight.status.toUpperCase() === "YES" 
            ? "rgb(4, 172, 54)"  // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
            : "rgba(255, 0, 0, 1)";  // ‡πÅ‡∏î‡∏á

        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞
        const iconUrl = isHelicopter
            ? "helicopter.svg" // ‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå
            : "airplane.svg"; // ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô

        const vehicleIcon = L.icon({
            iconUrl: iconUrl,
            iconSize: isHelicopter ? [34, 34] : [34, 34], // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢
            iconAnchor: [16, 32],
            popupAnchor: [0, -32]
        });

        var marker = L.marker([flight.latitude, flight.longitude], { icon: vehicleIcon })
            .addTo(map)
            .bindTooltip(`${flight.aircraftNumber}`, { permanent: false, direction: "top" })
            .on('click', function () {
                updateSidebar(flight);
            });

        // ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏á‡∏≤
        marker._icon.style.filter = `brightness(1) drop-shadow(0 0 0.5px ${shadowColor}) drop-shadow(0 0 0.5px ${shadowColor})`;
    });
}







async function updateSidebar(flight) {
    const aircraftKey = flight.name.trim().toUpperCase();
    const aircraftImage = aircraftImages[aircraftKey] || "https://via.placeholder.com/320x180?text=No+Image";

    let maxHours = 150;  // ‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    if (flight.name.toUpperCase() === "CARAVAN" ) {
        maxHours = 100;  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CARAVAN ‡πÅ‡∏•‡∏∞ SKA350 ‡πÉ‡∏ä‡πâ 100 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
    }
    if (flight.name.toUpperCase() === "CN-235" || flight.name.toUpperCase() === "SKA350") {
        maxHours = 200;  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CN-235 ‡πÉ‡∏ä‡πâ 200 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
    }

    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö maxHours
    if (flight.type === 'helicopter') {
        // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getValidACheck ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì maxHours ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå
        let column = await HgetValidACheck(flight.aircraftNumber);  // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå H, I, J
        console.log("‚úÖ maxHours from Google Sheets:", column);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î maxHours ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö
        if (column === 7) {  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå H (7)
            maxHours = 100;   // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ maxHours = 100
        } else if (column === 8) {  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå I (8)
            maxHours = 150;   // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ maxHours = 150
        } else if (column === 9) {  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå J (9)
            maxHours = 300;   // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ maxHours = 300
        }
    }
    console.log("‚úÖ maxHours:", maxHours);
    const remainingAcheck = parseFloat(flight.aCheck) || 0;
    let aCheckPercentage = ((maxHours - remainingAcheck) / maxHours) * 100; // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå

    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏ï‡∏¥‡∏î‡∏•‡∏ö ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô 0%
    if (aCheckPercentage < 0) {
        aCheckPercentage = 0;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÄ‡∏Å‡∏¥‡∏ô 100
    if (aCheckPercentage > 100) {
        aCheckPercentage = 100;
    }

    // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏•‡∏≠‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
    const barWidth = 100; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏´‡∏•‡∏≠‡∏î‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏´‡∏•‡∏≠‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå
    let barColor = '#28a745';  // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß (‡∏î‡∏µ)
    if (aCheckPercentage > 70) {
        barColor = '#dc3545';  // ‡∏™‡∏µ‡πÅ‡∏î‡∏á (‡πÅ‡∏¢‡πà)
    }

    document.getElementById('sidebar-content').innerHTML = `
        <button class="close-btn" onclick="closeSidebar()">‚úñ</button>
        <div class="status-bar" style="background: ${flight.status.toLowerCase() === "yes" ? "#28a745" : "#dc3545"};">
            <span class="status-text">${flight.status.toLowerCase() === "yes" ? "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ" : "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"}</span>
        </div>


        <h2 class="popup-title">${flight.name} (${flight.aircraftNumber})</h2>
        <img src="${aircraftImage}" alt="${flight.name}" class="airplane-image">
        
        <p><strong>‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ö‡∏¥‡∏ô:</strong> ${flight.remainingHours} ‡∏ä‡∏°.</p>

        <h3>‚öô ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡∏ô‡∏ï‡πå</h3>
        <p><strong>No.1 / LH:</strong> ${flight.engineLH} ‡∏ä‡∏°.</p>
        <p><strong>No.2 / RH:</strong> ${flight.engineRH} ‡∏ä‡∏°.</p>

        <h3>üîß ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πà‡∏≠‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á</h3>
        <p><strong>‡∏Ñ‡∏£‡∏ö‡∏ã‡πà‡∏≠‡∏°:</strong> ${flight.aCheck} ‡∏ä‡∏°. / ${maxHours} ‡∏ä‡∏°. (${aCheckPercentage.toFixed(1)}%)</p>
        <div style="width: ${barWidth}%; background-color: #e0e0e0; border-radius: 5px; height: 10px; margin-top: 5px;">
            <div style="width: ${aCheckPercentage}%; background-color: ${barColor}; height: 100%; border-radius: 5px;"></div>
        </div>

        <h3>üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</h3>
        <p><strong>‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à/‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á:</strong> ${flight.missionBase}</p>

        <h3>üõ† ‡∏ú‡∏π‡πâ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏á‡∏≤‡∏ô‡∏ä‡πà‡∏≤‡∏á</h3>
        <p>${flight.maintenanceManager}</p>

        ${flight.note ? `<h3>üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</h3><p>${flight.note}</p>` : ""}` 
    ;

    document.getElementById('sidebar').style.display = 'block';
}

async function HgetValidACheck(aircraftNumber) {
    const sheetID = "1_M74Pe_4uul0fkcEea8AMxQIMcPznNZ9ttCqvbeQgBs";  // ID ‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ï‡∏Ñ‡∏∏‡∏ì
    const helicopterSheetGID = "1621250589";  // GID ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const url = `https://docs.google.com/spreadsheets/d/${sheetID}/gviz/tq?tqx=out:json&gid=${helicopterSheetGID}`;
    try {
        const response = await fetch(url);
        const text = await response.text();
        const json = JSON.parse(text.substring(47, text.length - 2));

    //console.log("Data from Google Sheets:", json.table.rows);  // ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å Google Sheets
        
        // ‡∏•‡∏π‡∏õ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô
        for (let row of json.table.rows) {
            const aircraft = row.c[2]?.v;  // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÅ‡∏£‡∏Å

            console.log(`Checking row for aircraft: ${aircraft}`);  // log ‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö

            if (aircraft && aircraft.toString().trim() === aircraftNumber.toString().trim()) {
                // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå H, I, J ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥ maxHours ‡∏°‡∏≤‡πÉ‡∏ä‡πâ
                for (let col = 7; col <= 9; col++) {
                    let value = row.c[col]?.v;
                    console.log(`Found maxHours in column ${col}: ${value}`);  // log ‡∏Ñ‡πà‡∏≤ maxHours ‡∏ó‡∏µ‡πà‡∏û‡∏ö    
                    if (value && value !== '-' && value !== '_') {
                        console.log(`Found maxHours in column ${col}: ${value}`);  // log ‡∏Ñ‡πà‡∏≤ maxHours ‡∏ó‡∏µ‡πà‡∏û‡∏ö
                        return col;  // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                    }
                }
            }
        }
    } catch (error) {
        console.error("Error fetching data from Google Sheets:", error);
    }
    
    return 150;  // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
}













function getStatusGradient(status) {
    if (status === "yes") {
        return 'linear-gradient(135deg, #28a745, #218838)';
    } else if (status === "no") {
        return 'linear-gradient(135deg, #dc3545, #c82333)';
    }
    return 'linear-gradient(135deg, #dc3545, #c82333)';
}

function closeSidebar() {
    document.getElementById('sidebar').style.display = 'none';
}

document.addEventListener("keydown", function (event) {
    if (event.key === "Escape") {
        closeSidebar();
    }
});

document.getElementById('searchBtn').addEventListener('click', function () {
    const searchValue = document.getElementById('searchBox').value.trim().toUpperCase();

    const flight = flightData.find(flight => flight.aircraftNumber.toUpperCase() === searchValue);

    if (flight) {
        updateSidebar(flight);
        map.setView([flight.latitude, flight.longitude], 8);
    } else {
        alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ');
    }
});


document.addEventListener("DOMContentLoaded", function() {
    document.getElementById('searchBtn').addEventListener('click', function () {
        const searchBox = document.getElementById('searchBox');
        if (searchBox) {
            const searchValue = searchBox.value.trim().toUpperCase();

            const flight = flightData.find(flight => flight.aircraftNumber.toUpperCase() === searchValue);

            if (flight) {
                updateSidebar(flight);
                map.setView([flight.latitude, flight.longitude], 8);
            } else {
                alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ');
            }
        } else {
            console.error('‡πÑ‡∏°‡πà‡∏û‡∏ö input ‡∏ó‡∏µ‡πà‡∏°‡∏µ id="searchBox"');
        }
    });
});


function setupAircraftListToggle() {
    const toggleListButton = document.getElementById("toggleList");
    const listContainer = document.getElementById("aircraftListContainer");

    if (toggleListButton && listContainer) {
        toggleListButton.addEventListener("click", function () {
            listContainer.style.display = (listContainer.style.display === "none" || listContainer.style.display === "") ? "block" : "none";
        });
   
    }
}

function generateAircraftList() {
    const listContainer = document.getElementById('aircraftList');
    listContainer.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤

    let availableCount = 0;
    let unavailableCount = 0;

    flightData.forEach(flight => {
        const listItem = document.createElement('li');
        listItem.classList.add("aircraft-item");

        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß/‡πÅ‡∏î‡∏á)
        const statusIcon = document.createElement('span');
        statusIcon.style.width = '10px';
        statusIcon.style.height = '10px';
        statusIcon.style.borderRadius = '50%';
        statusIcon.style.marginRight = '10px'; // ‡πÄ‡∏ß‡πâ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏Ç‡∏≠‡∏ö

        if (flight.status.toLowerCase() === "yes") {
            statusIcon.style.backgroundColor = 'green'; // ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
            availableCount++;
        } else {
            statusIcon.style.backgroundColor = 'red'; // ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
            unavailableCount++;
        }

        listItem.textContent = `${flight.name} (${flight.aircraftNumber})`;
        listItem.insertBefore(statusIcon, listItem.firstChild); // ‡πÉ‡∏™‡πà‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏•‡∏¥‡∏™‡∏ï‡πå

        listItem.addEventListener("click", () => {
            updateSidebar(flight);
            map.setView([flight.latitude, flight.longitude], 8);
        });

        listContainer.appendChild(listItem);
    });

    // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
    const statusSummary = document.getElementById('statusSummary');
    statusSummary.innerHTML = `
        <p>‚úîÔ∏è‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ: ${availableCount} </p>
        <p>‚ùå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: ${unavailableCount} </p>
    `;
}

const toggleListBtn = document.getElementById("toggleListBtn");
const aircraftList = document.getElementById("aircraftList");

toggleListBtn.addEventListener("click", () => {
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î)
    if (aircraftList.style.display === "none") {
        aircraftList.style.display = "block";  // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        toggleListBtn.textContent = "‚ñ≤ ‡∏õ‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô";  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏∏‡πà‡∏°
    } else {
        aircraftList.style.display = "none";  // ‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        toggleListBtn.textContent = "‚ñº ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô";  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏∏‡πà‡∏°
    }
});


